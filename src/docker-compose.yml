services:
  # Gateway Service
  gateway:
    build: ./gateway
    ports:
      - "5001:5000"
    depends_on:
      - gatcha
      - user
      - market
    environment:
    - GATCHA_URL=http://gatcha:5000
    - USER_URL=http://user:5000
    - MARKET_URL=http://market:5000

  # Gateway Service RESERVED FOR ADMINS, with access to privileged endpoints
  admin-gateway:
    build: ./gateway
    ports:
      - "5002:5000"
    depends_on:
      - gatcha
      - user
      - market
    environment:
    - GATCHA_URL=http://gatcha:5000
    - USER_URL=http://user:5000
    - MARKET_URL=http://market:5000

  # Gatcha service
  gatcha:
    build: ./gatcha
    depends_on:
      - db-gatcha
    environment:
      - USER_URL=http://user:5000
      - MARKET_URL=http://market:5000

  # User Service
  user:
    build: ./user
    depends_on:
      - db-user
    environment:
      - GATCHA_URL=http://gatcha:5000
      - MARKET_URL=http://market:5000

  market:
    build: ./market
    depends_on:
      - db-market
    environment:
      - GATCHA_URL=http://gatcha:5000
      - USER_URL=http://user:5000

  # MongoDB for gatcha (Database per il servizio Gatcha)
  db-gatcha:
    image: mongo:latest
    ports:
      - "27017:27017"  # TODO: è esposta solo per debugging, da commentare in produzione.
    volumes:
      - dbdata-gatcha:/data/db
      - ./mongo/seed-data:/docker-entrypoint-initdb.d # mongo, all'avvio, esegue automaticamente tutti i file .js che trova in quella cartella. serve per popolare con i dati iniziali. see: https://stackoverflow.com/questions/42912755/how-to-create-a-db-for-mongodb-container-on-start-up/42917632#42917632
    environment:
      MONGO_INITDB_DATABASE: gatcha_db  # Nome del database per Gatcha
    command: mongod --quiet --logpath /dev/null  # Avvia MongoDB con log minimizzati

  # MongoDB for user (Database per il servizio User)
  db-user:
    image: mongo:latest
    ports:
      - "27018:27017"  # TODO: è esposta solo per debugging, da commentare in produzione.
    volumes:
      - dbdata-user:/data/db
    environment:
      MONGO_INITDB_DATABASE: user_db  # Nome del database per gli utenti
    command: mongod --quiet --logpath /dev/null  # Avvia MongoDB con log minimizzati

  db-market:
    image: mongo:latest
    ports:
      - "27019:27017"
    volumes:
      - dbdata-market:/data/db
    environment:
      MONGO_INITDB_DATABASE: market_db
    command: mongod --quiet --logpath /dev/null

volumes:
  dbdata-gatcha:
  dbdata-user:  # Volume per db-user
  dbdata-market:


# TODO: mettere su docker network separate tipo come avevo fatto nel disegno, però potrebbe volerci il bridge invece che dover mettere il gateway su due network allo stesso tempo
