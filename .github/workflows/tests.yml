name: INTEGRATION AND UNIT TESTS

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]
  workflow_dispatch:

jobs:
  integration-tests:
    name: Integration tests (build and run everything)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Check. All auth_utils.py files must be identical
        run: |
          find . -name "auth_utils.py" -exec md5sum {} + | awk '{print $1}' | uniq | wc -l | awk '$1 != 1 { exit 1 }'

      - name: Build and run the whole system using Docker Compose
        run: docker compose -f src/docker-compose.yml up -d

      # - name: Install Node.js for Newman
      #   uses: actions/setup-node@v4

      # # TODO: dovremo usare .json come chiesto da professore invece che API. Quando faremo cioò, usare lo step sotto invece che quello che scarica direttamente da Postman 
      # # e in più dovremo sostituire il nome del file dentro al json con: "src": "test/testimage.png"
      # - name: Run the Newman tests
      #   run: |
      #     npm install -g newman
      #     newman run docs/integration-tests.postman_collection.json -e docs/localhost.postman_environment.json


      - name: Run the Postman tests
        # questo comando scarica la collection e l'environment direttamente da Postman, senza che noi dobbiamo scaricarli
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
          postman login --with-api-key ${{ secrets.POSTMAN_AK2 }}
          postman collection run 26720283-80745346-aaa6-4cff-b0dd-137edb46a5f3 -e 39572593-8bfb337c-8e52-45f6-8649-a6d452382c62 --insecure



      - name: Output Docker Compose logs
        if: always()
        run: docker compose -f src/docker-compose.yml logs

      - name: Stop Docker Compose
        run: docker compose -f src/docker-compose.yml down






  gatcha-service-isolation-tests:
    name: Gatcha service isolation tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build and run the whole system using Docker Compose
        run: docker compose -f src/gatcha/docker-compose.yml up -d

      - name: Run the Postman tests
        # questo comando scarica la collection e l'environment direttamente da Postman, senza che noi dobbiamo scaricarli
        # COLLEZIONE CON I TEST DI ISOLAMENTO PER IL SERVIZIO GATCHA E BASTA
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
          postman login --with-api-key ${{ secrets.POSTMAN_AK2 }}
          postman collection run 26720283-f65fb32a-25e8-4616-8a6d-cea3f1f8a734 -e 39572593-8bfb337c-8e52-45f6-8649-a6d452382c62 --insecure



      - name: Output Docker Compose logs
        if: always()
        run: docker compose -f src/docker-compose.yml logs

      - name: Stop Docker Compose
        run: docker compose -f src/docker-compose.yml down

  user-service-isolation-tests:
    name: User service isolation tests

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build and run the whole system using Docker Compose

        run: docker compose -f src/user/docker-compose.yml up -d

      - name: Run the Postman tests
        # questo comando scarica la collection e l'environment direttamente da Postman, senza che noi dobbiamo scaricarli
        # COLLEZIONE CON I TEST DI ISOLAMENTO PER IL SERVIZIO USER E BASTA
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
          postman login --with-api-key ${{ secrets.POSTMAN_AK2 }}
          postman collection run 40249701-5c01fd1f-792e-46a1-8fd8-c61910ac311a -e 39572593-8bfb337c-8e52-45f6-8649-a6d452382c62 --insecure


      - name: Output Docker Compose logs
        if: always()
        run: docker compose -f src/docker-compose.yml logs

      - name: Stop Docker Compose

        run: docker compose -f src/docker-compose.yml down
       
  market-service-isolation-tests:
    name: Market service isolation tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build and run the whole system using Docker Compose
        run: docker compose -f src/market/docker-compose.yml up -d

      - name: Run the Postman tests
        # questo comando scarica la collection e l'environment direttamente da Postman, senza che noi dobbiamo scaricarli
        # COLLEZIONE CON I TEST DI ISOLAMENTO PER IL SERVIZIO GATCHA E BASTA
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
          postman login --with-api-key {{postman-api-key-here}}
          postman collection run 39902012-f0be4f9f-3406-4e2c-bee6-0e1267bbae5d -e 39572593-8bfb337c-8e52-45f6-8649-a6d452382c62 --insecure



      - name: Output Docker Compose logs
        if: always()
        run: docker compose -f src/docker-compose.yml logs

      - name: Stop Docker Compose
        run: docker compose -f src/docker-compose.yml down


  auth-service-isolation-tests:
      name: Auth service isolation tests
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@v4

        - name: Build and run the whole system using Docker Compose
          run: docker compose -f src/auth/docker-compose.yml up -d

        - name: Run the Postman tests
          # questo comando scarica la collection e l'environment direttamente da Postman, senza che noi dobbiamo scaricarli
          # COLLEZIONE CON I TEST DI ISOLAMENTO PER IL SERVIZIO AUTH E BASTA
          run: |
            curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
            postman login --with-api-key ${{ secrets.POSTMAN_AK2 }}
            postman collection run 26720283-efa4a5ea-7821-4489-a5b3-1b8720e26ebe -e 39572593-8bfb337c-8e52-45f6-8649-a6d452382c62 --insecure
        - name: Output Docker Compose logs
          if: always()
          run: docker compose -f src/docker-compose.yml logs

        - name: Stop Docker Compose
          run: docker compose -f src/docker-compose.yml down
